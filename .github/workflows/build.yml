name: Release

env:
  BOOTSTRAPPER_VERSION: 1.0.0

on:
  push:
    paths:
      - 'src/**'
      - 'test/**'
      - 'Directory.Build.props'
      - '**/build.yml'
    # tags:
    #   - "*.*.*"
    branches:
      - master
  # pull_request:
  #   paths:
  #     - 'src/**'
  #     - 'test/**'
  #     - 'Directory.Build.props'
  #     - '**/build.yml'
  workflow_dispatch:

jobs:
  compile:
    name: Build
    timeout-minutes: 10
    strategy:
      # max-parallel: 2
      matrix: 
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Restore NuGet packages
        run: dotnet restore
        working-directory: ./

      - name: Build
        run: dotnet build -c Release --no-restore
        working-directory: ./

      - name: Test Analyzers
        run: dotnet test -c Release --logger:"console;verbosity=normal" --no-build --filter Category!=Flaky
        working-directory: ./
  
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    needs:
      - compile
    outputs:
      version: ${{ steps.v.outputs.version }}
    steps:
      - id: v
        run: echo "::set-output name=version::${BOOTSTRAPPER_VERSION}"
  
  publish:
    name: Build and Publish NuGets
    timeout-minutes: 60
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master' && success()
    needs:
      - calculate-version
    steps:
      - name: Version Output Check
        run: |
          echo "${{ needs.calculate-version.outputs.version }}"
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Clean
        run: dotnet clean --configuration Release
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --configuration Release --no-restore --no-build -l trx --verbosity normal
      - name: Pack
        run: dotnet pack .\src\Bootstrapper\Bootstrapper.csproj --no-build --configuration Release --output .\artifacts
      - name: PushNuget
        run: dotnet nuget push *.nupkg --source ${{secrets.NUGET_API_URL}} --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
      - name: Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: artifacts/**/*